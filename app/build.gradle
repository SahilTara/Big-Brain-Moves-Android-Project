apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.uottawa.bigbrainmoves.servio"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.0.5'
    implementation 'com.google.firebase:firebase-database:16.0.4'
    implementation 'com.jaredrummler:material-spinner:1.2.5'
    implementation "io.reactivex.rxjava2:rxjava:2.2.3"

    testImplementation "org.powermock:powermock-module-junit4:2.0.0-RC.3"
    testImplementation "org.powermock:powermock-module-junit4-rule:2.0.0-RC.3"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.0-RC.3"
    testImplementation "org.powermock:powermock-classloading-xstream:2.0.0-RC.3"
    testImplementation "org.mockito:mockito-core:2.23.0"
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation 'com.wdullaer:materialdatetimepicker:4.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.dmytrodanylyk.android-process-button:library:1.0.4'
    implementation 'com.google.android.material:material:1.0.0'
}
apply plugin: 'com.google.gms.google-services'

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.0'
            }
        }
    }
}
